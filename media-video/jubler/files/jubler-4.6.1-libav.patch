--- Jubler-4.6.1.orig/resources/ffmpeg/ffdecode/decodeaudio.c
+++ Jubler-4.6.1/resources/ffmpeg/ffdecode//decodeaudio.c
@@ -91,7 +91,7 @@ jboolean decodeAudio(JNIEnv * env, jobje
         /* Find the first supported codec in the audio streams */
         for(i=0; i<fcx->nb_streams; i++){
             ccx=fcx->streams[i]->codec;
-            if(ccx->codec_type==CODEC_TYPE_AUDIO) {
+            if(ccx->codec_type==AVMEDIA_TYPE_AUDIO) {
                 /* Found an audio stream, check if codec is supported */
                 codec = avcodec_find_decoder(ccx->codec_id);
                 if(codec){
@@ -106,7 +106,7 @@ jboolean decodeAudio(JNIEnv * env, jobje
          * audio and video stream we have to seek by the video
          */
         for(i=0; i<fcx->nb_streams; i++) {
-            if(fcx->streams[i]->codec->codec_type==CODEC_TYPE_VIDEO) {
+            if(fcx->streams[i]->codec->codec_type==AVMEDIA_TYPE_VIDEO) {
                 /* Found a video stream, check if codec is supported */
                 vcodec = avcodec_find_decoder(fcx->streams[i]->codec->codec_id);
                 if(vcodec) {
@@ -330,7 +330,7 @@ AVStream *add_audio_stream(JNIEnv * env,
     if (retflag != JNI_FALSE) {
         c = st->codec;
         c->codec_id = codec_id;
-        c->codec_type = CODEC_TYPE_AUDIO;
+        c->codec_type = AVMEDIA_TYPE_AUDIO;
         
         /* put sample parameters */
         //c->bit_rate = 64000;
@@ -364,7 +364,7 @@ void audio_enc_out(JNIEnv * env, jobject
 		pkt.data = outbuf;
 		if(audio_st->codec->coded_frame && audio_st->codec->coded_frame->pts != AV_NOPTS_VALUE)
 			pkt.pts = av_rescale_q(audio_st->codec->coded_frame->pts, audio_st->codec->time_base, audio_st->time_base);
-		pkt.flags |= PKT_FLAG_KEY;
+		pkt.flags |= AV_PKT_FLAG_KEY;
 							
 		/* write the compressed frame in the media file */
 		if (av_write_frame(ofcx, &pkt) != 0) {
--- Jubler-4.6.1.orig/resources/ffmpeg/ffdecode/decodeframe.c
+++ Jubler-4.6.1/resources/ffmpeg/ffdecode//decodeframe.c
@@ -139,7 +139,7 @@ AVPicture* decodeFrame(JNIEnv * env, job
         // Find the first supported codec in the video streams.
         for(i=0; i<fcx->nb_streams; i++){
             ccx=fcx->streams[i]->codec;
-            if(ccx->codec_type==CODEC_TYPE_VIDEO) {
+            if(ccx->codec_type==AVMEDIA_TYPE_VIDEO) {
                 // Found a video stream, check if codec is supported
                 codec = avcodec_find_decoder(ccx->codec_id);
                 if (codec) {
--- Jubler-4.6.1.orig/resources/ffmpeg/ffdecode/grabinfo.c
+++ Jubler-4.6.1/resources/ffmpeg/ffdecode//grabinfo.c
@@ -99,7 +99,7 @@ void get_information(JNIEnv * env, jobje
         // Give us information about the resolution and exit
         for(i=0;i<fcx->nb_streams;i++) {
             AVStream *st = fcx->streams[i];
-            if(st->codec->codec_type == CODEC_TYPE_VIDEO) {
+            if(st->codec->codec_type == AVMEDIA_TYPE_VIDEO) {
                 dim[0] = st->codec->width;
                 dim[1] = st->codec->height;
                 
--- Jubler-4.6.1.orig/resources/ffmpeg/ffdecode/makecache.c
+++ Jubler-4.6.1/resources/ffmpeg/ffdecode//makecache.c
@@ -104,7 +104,7 @@ JNIEXPORT jboolean JNICALL Java_com_pana
             /* Find the first supported codec in the audio streams */
             for(i=0; i<fcx->nb_streams; i++){
                 ccx=fcx->streams[i]->codec;
-                if(ccx->codec_type==CODEC_TYPE_AUDIO) {
+                if(ccx->codec_type==AVMEDIA_TYPE_AUDIO) {
                     /* Found an audio stream, check if codec is supported */
                     codec = avcodec_find_decoder(ccx->codec_id);
                     if(codec){

