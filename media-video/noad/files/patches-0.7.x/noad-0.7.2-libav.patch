--- noad-0.7.2.orig/audiotools.cpp
+++ noad-0.7.2/audiotools.cpp
@@ -43,7 +43,7 @@ AudioInfo _ai;
 AudioInfo *ai=&_ai;
 int pr = 1;
 
-uint8_t *outbuf=NULL;
+int16_t *outbuf=NULL;
 AVCodec *codec=NULL;
 AVCodecContext *codecContext= NULL;
 int64_t basepts=0;
@@ -110,7 +110,7 @@ void initAVCodec()
     fprintf(stderr, "could not open codec\n");
   }
 
-  outbuf = (uint8_t *)malloc(AVCODEC_MAX_AUDIO_FRAME_SIZE);
+  outbuf = (int16_t *)malloc(AVCODEC_MAX_AUDIO_FRAME_SIZE);
 
   av_codec_initialised = true;
         
@@ -148,6 +148,8 @@ int scan_audio_stream_0(unsigned char *m
 //  int16_t chan2t = 0;
   uint8_t *buf = mbuf;
   uint32_t header;
+  AVPacket pkt;
+
   if( in_buf_count == 0 )
   {
 	 header = AV_RB32(buf); 
@@ -161,14 +163,20 @@ int scan_audio_stream_0(unsigned char *m
   }
   memcpy(&audio_in_buffer[in_buf_count],buf,count);
   in_buf_count += count;
-  long size = in_buf_count;
+  int size = in_buf_count;
   inbuf_ptr = audio_in_buffer;
 
+  // libav related code
+  av_init_packet(&pkt);
+
   while (size > 0) 
   {
+    pkt.size = size;
+    pkt.data = inbuf_ptr;
+
     out_size = AVCODEC_MAX_AUDIO_FRAME_SIZE;
-    len = avcodec_decode_audio2(codecContext, (short *)outbuf, &out_size,
-                                  inbuf_ptr, 576/*size*/);
+    len = avcodec_decode_audio3(codecContext, outbuf, &out_size,
+                                  &pkt);
     if (len < 0) 
     {
       //fprintf(stderr, "Error while decoding audio\n\n");
@@ -185,13 +193,13 @@ int scan_audio_stream_0(unsigned char *m
       chan1 = 0;
       chan2 = 0;
       //lowvalcount = 0;
-      uint8_t *src=outbuf;
+      int16_t *src=outbuf;
       for( int i = 0; i < out_size && !havesilence; i+=4)
       {
         //if(*src == 0 || *src == 0xFF )
         {
-          chan1 = bswap_16(*((int16_t *)src));
-          chan2 = bswap_16(*((int16_t *)(src+2)));
+          chan1 = bswap_16(*(src));
+          chan2 = bswap_16(*((src+2)));
           //chan1 = *((int16_t *)&outbuf[i]);
           //chan2 = *((int16_t *)&outbuf[i+2]);
           /*

