diff --git a/daemon/cmake/DaemonFlags.cmake b/daemon/cmake/DaemonFlags.cmake
index e9234f8..8cc5c5f 100644
--- a/daemon/cmake/DaemonFlags.cmake
+++ b/daemon/cmake/DaemonFlags.cmake
@@ -152,31 +152,8 @@ elseif (NACL)
     set_c_cxx_flag("-O2 -DNDEBUG -g3"   RelWithDebInfo)
     set_c_cxx_flag("-O0          -g3"   Debug)
 else()
-    set_c_cxx_flag("-ffast-math")
     set_c_cxx_flag("-fno-strict-aliasing")
 
-    # Set arch on x86 to SSE2 minimum and enable CMPXCHG16B
-    if (ARCH STREQUAL "x86")
-        set_c_cxx_flag("-m32")
-        set_c_cxx_flag("-msse2")
-        set_c_cxx_flag("-mtune=generic")
-        try_c_cxx_flag_werror(MFPMATH_SSE "-mfpmath=sse")
-    elseif (ARCH STREQUAL "x86_64")
-        set_c_cxx_flag("-m64")
-        set_c_cxx_flag("-mtune=generic")
-        try_c_cxx_flag_werror(MCX16 "-mcx16")
-    endif()
-
-    # Use hidden symbol visibility if possible
-    try_c_cxx_flag(FVISIBILITY_HIDDEN "-fvisibility=hidden")
-
-    # Extra debug flags
-    set_c_cxx_flag("-g3" DEBUG)
-    set_c_cxx_flag("-g3" RELWITHDEBINFO)
-    if (USE_DEBUG_OPTIMIZE)
-        try_c_cxx_flag(OPTIMIZE_DEBUG "-Og" DEBUG)
-    endif()
-
     # C++11 support
     try_cxx_flag(GNUXX11 "-std=gnu++11")
     if (NOT FLAG_GNUXX11)
@@ -197,10 +174,6 @@ else()
         set_linker_flag("-stdlib=libc++")
     endif()
 
-    # Hardening, don't set _FORTIFY_SOURCE in debug builds
-    set_c_cxx_flag("-D_FORTIFY_SOURCE=2" RELEASE)
-    set_c_cxx_flag("-D_FORTIFY_SOURCE=2" RELWITHDEBINFO)
-    set_c_cxx_flag("-D_FORTIFY_SOURCE=2" MINSIZEREL)
     if (USE_HARDENING)
         try_c_cxx_flag(FSTACK_PROTECTOR_STRONG "-fstack-protector-strong")
         if (NOT FLAG_FSTACK_PROTECTOR_STRONG)
@@ -212,17 +185,6 @@ else()
         try_linker_flag(LINKER_PIE "-pie")
     endif()
 
-    # Linker flags
-    if (NOT APPLE)
-        try_linker_flag(LINKER_O1 "-Wl,-O1")
-        try_linker_flag(LINKER_SORT_COMMON "-Wl,--sort-common")
-        try_linker_flag(LINKER_AS_NEEDED "-Wl,--as-needed")
-        if (NOT USE_ADDRESS_SANITIZER)
-            try_linker_flag(LINKER_NO_UNDEFINED "-Wl,--no-undefined")
-        endif()
-        try_linker_flag(LINKER_Z_RELRO "-Wl,-z,relro")
-        try_linker_flag(LINKER_Z_NOW "-Wl,-z,now")
-    endif()
     if (WIN32)
         try_linker_flag(LINKER_DYNAMICBASE "-Wl,--dynamicbase")
         try_linker_flag(LINKER_NXCOMPAT "-Wl,--nxcompat")
