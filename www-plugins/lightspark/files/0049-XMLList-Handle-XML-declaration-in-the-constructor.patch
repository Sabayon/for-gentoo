From ae5b159e6253aaffaa1c92f0260ad0d1f92cab55 Mon Sep 17 00:00:00 2001
From: Antti Ajanki <antti.ajanki@iki.fi>
Date: Sat, 25 May 2013 18:46:37 +0300
Subject: [PATCH 049/110] [XMLList] Handle XML declaration in the constructor

---
 src/backends/xml_support.h         |  3 ++-
 src/scripting/toplevel/XMLList.cpp | 24 +++++++++++++++++++++++-
 src/scripting/toplevel/XMLList.h   |  1 +
 3 files changed, 26 insertions(+), 2 deletions(-)

diff --git a/src/backends/xml_support.h b/src/backends/xml_support.h
index 5ef59b1..5b867fb 100644
--- a/src/backends/xml_support.h
+++ b/src/backends/xml_support.h
@@ -63,10 +63,11 @@ protected:
 	// Set the root to be a copy of src. If src is a text node,
 	// create a new element node with the same content.
 	xmlpp::Node* buildCopy(const xmlpp::Node* node);
-	static std::string parserQuirks(const std::string& str);
 	static std::string quirkCData(const std::string& str);
 	static std::string quirkXMLDeclarationInMiddle(const std::string& str);
 	void removeWhitespaceNodes(xmlpp::Element *node);
+public:
+	static std::string parserQuirks(const std::string& str);
 };
 
 };
diff --git a/src/scripting/toplevel/XMLList.cpp b/src/scripting/toplevel/XMLList.cpp
index f4bf064..20a2352 100644
--- a/src/scripting/toplevel/XMLList.cpp
+++ b/src/scripting/toplevel/XMLList.cpp
@@ -182,7 +182,12 @@ void XMLList::buildFromString(const std::string& str)
 {
 	xmlpp::DomParser parser;
 	std::string default_ns=getVm()->getDefaultXMLNamespace();
-	std::string expanded="<parent xmlns=\"" + default_ns + "\">" + str + "</parent>";
+	std::string xmldecl;
+	std::string str_without_xmldecl = extractXMLDeclaration(str, xmldecl);
+	std::string expanded = xmldecl + 
+		"<parent xmlns=\"" + default_ns + "\">" + 
+		XMLBase::parserQuirks(str_without_xmldecl) + 
+		"</parent>";
 	try
 	{
 		parser.parse_memory(expanded);
@@ -205,6 +210,23 @@ void XMLList::buildFromString(const std::string& str)
 		nodes.push_back(_MR(Class<XML>::getInstanceS(*it)));
 }
 
+std::string XMLList::extractXMLDeclaration(const std::string& xml, std::string& xmldecl_out)
+{
+	std::string res = xml;
+	xmldecl_out = "";
+	if (xml.compare(0, 4, "<?xml"))
+	{
+		size_t declEnd = xml.find("?>");
+		if (declEnd != xml.npos)
+		{
+			declEnd += 2;
+			xmldecl_out = xml.substr(0, declEnd);
+			res = xml.substr(declEnd);
+		}
+	}
+	return res;
+}
+
 _R<XML> XMLList::reduceToXML() const
 {
 	//Needed to convert XMLList to XML
diff --git a/src/scripting/toplevel/XMLList.h b/src/scripting/toplevel/XMLList.h
index 7711629..0055c8d 100644
--- a/src/scripting/toplevel/XMLList.h
+++ b/src/scripting/toplevel/XMLList.h
@@ -33,6 +33,7 @@ private:
 	bool constructed;
 	tiny_string toString_priv() const;
 	void buildFromString(const std::string& str);
+	std::string extractXMLDeclaration(const std::string& xml, std::string& xmldecl_out);
 	void toXMLString_priv(xmlBufferPtr buf) const;
 	void appendSingleNode(ASObject *x);
 	void replace(unsigned int i, ASObject *x);
-- 
1.8.5.3

