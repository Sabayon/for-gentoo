From 6c83bebddacce66e410f71a05891d2d076228d3e Mon Sep 17 00:00:00 2001
From: Antti Ajanki <antti.ajanki@iki.fi>
Date: Sat, 8 Jun 2013 22:42:48 +0300
Subject: [PATCH 063/110] [Array] Array property names can not have leading
 zeros

var arr:Array=[]; arr["01"] will access a variable in the base
ASObject, not the object at the array position 1.
---
 src/scripting/toplevel/Array.cpp | 22 ++++++++++++++++++++++
 src/scripting/toplevel/Array.h   |  1 +
 2 files changed, 23 insertions(+)

diff --git a/src/scripting/toplevel/Array.cpp b/src/scripting/toplevel/Array.cpp
index c8917b4..8c82deb 100644
--- a/src/scripting/toplevel/Array.cpp
+++ b/src/scripting/toplevel/Array.cpp
@@ -1255,10 +1255,32 @@ bool Array::isValidMultiname(const multiname& name, uint32_t& index)
 	assert_and_throw(name.ns.size()!=0);
 	if(!name.ns[0].hasEmptyName())
 		return false;
+	if (name.name_type == multiname::NAME_STRING && 
+	    !isIntegerWithoutLeadingZeros(name.normalizedName()))
+		return false;
 
 	return name.toUInt(index);
 }
 
+bool Array::isIntegerWithoutLeadingZeros(const tiny_string& value)
+{
+	if (value.empty())
+		return false;
+	else if (value == "0")
+		return true;
+
+	bool first = true;
+	for (CharIterator it=value.begin(); it!=value.end(); ++it)
+	{
+		if (!it.isdigit() || (first && *it == '0'))
+			return false;
+
+		first = false;
+	}
+	
+	return true;
+}
+
 void Array::setVariableByMultiname(const multiname& name, ASObject* o, CONST_ALLOWED_FLAG allowConst)
 {
 	assert_and_throw(implEnable);
diff --git a/src/scripting/toplevel/Array.h b/src/scripting/toplevel/Array.h
index 75dec81..9cd7722 100644
--- a/src/scripting/toplevel/Array.h
+++ b/src/scripting/toplevel/Array.h
@@ -89,6 +89,7 @@ private:
 	};
 	tiny_string toString_priv() const;
 	int capIndex(int i) const;
+	static bool isIntegerWithoutLeadingZeros(const tiny_string& value);
 public:
 	Array(Class_base* c);
 	void finalize();
-- 
1.8.5.3

